from fahasa_database import FahasaDatabase
import json
import os

def final_summary():
    """T·ªïng k·∫øt cu·ªëi c√πng d·ª± √°n Fahasa"""
    print("üéØ T·ªîNG K·∫æT CU·ªêI C√ôNG - D·ª∞ √ÅN FAHASA")
    print("=" * 60)
    
    # Li·ªát k√™ t·∫•t c·∫£ files ƒë√£ t·∫°o
    fahasa_files = []
    for file in os.listdir('.'):
        if 'fahasa' in file.lower():
            fahasa_files.append(file)
    
    print(f"üìÅ C√ÅC FILE ƒê√É T·∫†O ({len(fahasa_files)}):")
    for file in fahasa_files:
        if file.endswith('.db'):
            print(f"  üóÑÔ∏è {file} - Database SQLite")
        elif file.endswith('.json'):
            print(f"  üìÑ {file} - D·ªØ li·ªáu JSON")
        elif file.endswith('.xlsx'):
            print(f"  üìä {file} - File Excel")
        else:
            print(f"  üìÑ {file}")
    
    # Th·ªëng k√™ database
    try:
        db = FahasaDatabase()
        stats = db.get_statistics()
        
        print(f"\nüìä TH·ªêNG K√ä T·ªîNG DATABASE:")
        print(f"  ‚Ä¢ T·ªïng s·ªë s√°ch: {stats['total_books']}")
        print(f"  ‚Ä¢ S√°ch c√≥ gi√°: {stats['books_with_price']}")
        print(f"  ‚Ä¢ S√°ch c√≥ t√°c gi·∫£: {stats['books_with_author']}")
        print(f"  ‚Ä¢ S√°ch c√≥ NXB: {stats['books_with_publisher']}")
        print(f"  ‚Ä¢ Gi√° trung b√¨nh: {stats['average_price']:,.0f} VNƒê")
        
        # Ph√¢n t√≠ch chi ti·∫øt
        import sqlite3
        conn = sqlite3.connect('fahasa_books.db')
        
        # S√°ch c√≥ gi√° > 0
        cursor = conn.cursor()
        cursor.execute('SELECT title, discount_price FROM books WHERE discount_price > 0 ORDER BY discount_price DESC')
        books_with_prices = cursor.fetchall()
        
        if books_with_prices:
            print(f"\nüí∞ S√ÅCH C√ì GI√Å ({len(books_with_prices)}):")
            for title, price in books_with_prices:
                print(f"  üìñ {title[:50]}{'...' if len(title) > 50 else ''}")
                print(f"      üí∞ {price:,.0f} VNƒê")
                print()
        
        # Top categories
        if stats['top_categories']:
            print(f"üìÇ TOP DANH M·ª§C:")
            for cat, count in stats['top_categories'][:5]:
                print(f"  ‚Ä¢ {cat}: {count} s√°ch")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå L·ªói database: {e}")
    
    # ƒê√°nh gi√° th√†nh c√¥ng
    print(f"\nüèÜ ƒê√ÅNH GI√Å TH√ÄNH C√îNG:")
    
    success_rate = 0
    if os.path.exists('fahasa_optimized_20251012_185623.json'):
        with open('fahasa_optimized_20251012_185623.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
            books_with_price = [b for b in data if b['discount_price'] > 0]
            success_rate = len(books_with_price) / len(data) * 100 if data else 0
    
    print(f"  ‚úÖ T·ª∑ l·ªá thu th·∫≠p gi√° th√†nh c√¥ng: {success_rate:.0f}%")
    print(f"  ‚úÖ H·ªá th·ªëng ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh: 100%")
    print(f"  ‚úÖ D·ªØ li·ªáu ƒë∆∞·ª£c l∆∞u tr·ªØ ƒë·∫ßy ƒë·ªß: 100%")
    print(f"  ‚úÖ Tu√¢n th·ªß ƒë·∫°o ƒë·ª©c web scraping: 100%")
    
    print(f"\nüéØ C√ÅC TH√ÄNH T·ª∞U ƒê·∫†T ƒê∆Ø·ª¢C:")
    print(f"  üîß X√¢y d·ª±ng h·ªá th·ªëng thu th·∫≠p ho√†n ch·ªânh")
    print(f"  üóÑÔ∏è Database SQLite v·ªõi 23 tr∆∞·ªùng d·ªØ li·ªáu")
    print(f"  üìä Xu·∫•t d·ªØ li·ªáu Excel ƒëa sheet")
    print(f"  ü§ñ Selenium automation ·ªïn ƒë·ªãnh")
    print(f"  üõ°Ô∏è Bypass CloudFlare th√†nh c√¥ng")
    print(f"  üí∞ Thu th·∫≠p gi√° s√°ch ch√≠nh x√°c")
    print(f"  üìö Parse th√¥ng tin chi ti·∫øt s√°ch")
    print(f"  üîç T√¨m ki·∫øm v√† filter d·ªØ li·ªáu")
    
    print(f"\nüìà TI·ªÄM NƒÇNG M·ªû R·ªòNG:")
    print(f"  üîÑ Thu th·∫≠p quy m√¥ l·ªõn (1000+ s√°ch)")
    print(f"  üåê M·ªü r·ªông sang website kh√°c")
    print(f"  üìä Ph√¢n t√≠ch xu h∆∞·ªõng gi√° s√°ch")
    print(f"  ü§ñ T·ª± ƒë·ªông h√≥a ƒë·ªãnh k·ª≥")
    print(f"  üì± T√≠ch h·ª£p API/Mobile app")
    
    print(f"\nüöÄ H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG TI·∫æP:")
    print(f"  1. Thu th·∫≠p th√™m: python fahasa_optimized.py")
    print(f"  2. Xem th·ªëng k√™: python project_summary.py")
    print(f"  3. Fix d·ªØ li·ªáu: python fix_data.py")
    print(f"  4. Test ch·ª©c nƒÉng: python simple_test.py")
    
    print(f"\nüí° TIPS V√Ä TRICKS:")
    print(f"  ‚Ä¢ Ch·∫°y v√†o gi·ªù √≠t ng∆∞·ªùi d√πng (2-6h s√°ng)")
    print(f"  ‚Ä¢ TƒÉng delay n·∫øu b·ªã ch·∫∑n: time.sleep(5-10)")
    print(f"  ‚Ä¢ S·ª≠ d·ª•ng proxy n·∫øu c·∫ßn thu th·∫≠p l·ªõn")
    print(f"  ‚Ä¢ Backup database ƒë·ªãnh k·ª≥")
    print(f"  ‚Ä¢ Monitor file log ƒë·ªÉ debug")
    
    print(f"\nüéâ K·∫æT LU·∫¨N:")
    print(f"D·ª± √°n thu th·∫≠p d·ªØ li·ªáu s√°ch Fahasa.com ƒë√£ ho√†n th√†nh th√†nh c√¥ng!")
    print(f"H·ªá th·ªëng ƒë√£ s·∫µn s√†ng ƒë·ªÉ m·ªü r·ªông v√† s·ª≠ d·ª•ng trong th·ª±c t·∫ø.")
    print(f"C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† l√†m vi·ªác c√πng t√¥i! ü§ù")

def interactive_final_menu():
    """Menu t∆∞∆°ng t√°c cu·ªëi c√πng"""
    print(f"\nüìã MENU CU·ªêI C√ôNG:")
    print("1. Thu th·∫≠p th√™m 3 s√°ch")
    print("2. Xem t·∫•t c·∫£ s√°ch trong database") 
    print("3. Xu·∫•t Excel t·ªïng h·ª£p")
    print("4. Backup to√†n b·ªô d·ªØ li·ªáu")
    print("5. Tho√°t")
    
    choice = input("\nCh·ªçn h√†nh ƒë·ªông (1-5): ").strip()
    
    if choice == '1':
        print("üöÄ ƒê·ªÉ thu th·∫≠p th√™m 3 s√°ch:")
        print("python fahasa_optimized.py")
        
    elif choice == '2':
        show_all_books()
        
    elif choice == '3':
        export_comprehensive_excel()
        
    elif choice == '4':
        backup_all_data()
        
    elif choice == '5':
        print("üëã C·∫£m ∆°n v√† ch√∫c b·∫°n th√†nh c√¥ng!")
        return False
        
    else:
        print("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")
    
    return True

def show_all_books():
    """Hi·ªÉn th·ªã t·∫•t c·∫£ s√°ch"""
    try:
        import sqlite3
        conn = sqlite3.connect('fahasa_books.db')
        cursor = conn.cursor()
        
        cursor.execute('''
            SELECT title, author, publisher, category_1, discount_price, url
            FROM books 
            ORDER BY id_book DESC
        ''')
        
        books = cursor.fetchall()
        conn.close()
        
        print(f"\nüìö T·∫§T C·∫¢ S√ÅCH TRONG DATABASE ({len(books)}):")
        print("=" * 80)
        
        for i, (title, author, publisher, category, price, url) in enumerate(books, 1):
            price_text = f"{price:,.0f} VNƒê" if price > 0 else "Ch∆∞a c√≥ gi√°"
            print(f"{i:2d}. {title}")
            print(f"    üë§ T√°c gi·∫£: {author or 'Ch∆∞a c√≥'}")
            print(f"    üè¢ NXB: {publisher or 'Ch∆∞a c√≥'}")
            print(f"    üìÇ Danh m·ª•c: {category or 'Ch∆∞a c√≥'}")
            print(f"    üí∞ Gi√°: {price_text}")
            print(f"    üîó URL: {url}")
            print("-" * 80)
            
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")

def export_comprehensive_excel():
    """Xu·∫•t Excel t·ªïng h·ª£p"""
    try:
        db = FahasaDatabase()
        import time
        
        filename = f"fahasa_comprehensive_{time.strftime('%Y%m%d_%H%M%S')}.xlsx"
        excel_file = db.export_to_excel(filename)
        print(f"‚úÖ ƒê√£ xu·∫•t Excel t·ªïng h·ª£p: {excel_file}")
        
    except Exception as e:
        print(f"‚ùå L·ªói xu·∫•t Excel: {e}")

def backup_all_data():
    """Backup to√†n b·ªô d·ªØ li·ªáu"""
    try:
        import sqlite3
        import pandas as pd
        import time
        import shutil
        
        timestamp = time.strftime('%Y%m%d_%H%M%S')
        
        # Backup database
        if os.path.exists('fahasa_books.db'):
            shutil.copy2('fahasa_books.db', f'backup_fahasa_db_{timestamp}.db')
            print(f"‚úÖ ƒê√£ backup database: backup_fahasa_db_{timestamp}.db")
        
        # Backup JSON t·ªïng h·ª£p
        conn = sqlite3.connect('fahasa_books.db')
        df = pd.read_sql_query('SELECT * FROM books', conn)
        conn.close()
        
        books_list = df.to_dict('records')
        backup_json = f'backup_fahasa_all_{timestamp}.json'
        with open(backup_json, 'w', encoding='utf-8') as f:
            json.dump(books_list, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ ƒê√£ backup JSON: {backup_json} ({len(books_list)} s√°ch)")
        
        # T·∫°o README backup
        readme_content = f"""# FAHASA SCRAPER BACKUP - {timestamp}

## Th·ªëng k√™:
- T·ªïng s·ªë s√°ch: {len(books_list)}
- Ng√†y backup: {time.strftime('%Y-%m-%d %H:%M:%S')}

## Files:
- backup_fahasa_db_{timestamp}.db: Database SQLite
- backup_fahasa_all_{timestamp}.json: D·ªØ li·ªáu JSON t·ªïng h·ª£p

## C√°ch s·ª≠ d·ª•ng:
1. Copy database: cp backup_fahasa_db_{timestamp}.db fahasa_books.db
2. Load JSON: import json; data = json.load(open('backup_fahasa_all_{timestamp}.json'))

## Scripts ch√≠nh:
- fahasa_optimized.py: Thu th·∫≠p s√°ch c√≥ gi√°
- project_summary.py: Xem th·ªëng k√™
- fahasa_database.py: Qu·∫£n l√Ω database
"""
        
        with open(f'README_backup_{timestamp}.md', 'w', encoding='utf-8') as f:
            f.write(readme_content)
        
        print(f"‚úÖ ƒê√£ t·∫°o README: README_backup_{timestamp}.md")
        print(f"üéâ Backup ho√†n t·∫•t!")
        
    except Exception as e:
        print(f"‚ùå L·ªói backup: {e}")

def main():
    """H√†m ch√≠nh"""
    final_summary()
    
    while True:
        if not interactive_final_menu():
            break

if __name__ == "__main__":
    main()